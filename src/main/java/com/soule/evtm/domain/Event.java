package com.soule.evtm.domain;
// Generated Apr 2, 2013 12:06:32 AM by Hibernate Tools 3.2.1.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Event generated by hbm2java
 */
@Entity
@Table(name="event"
    )
public class Event  implements java.io.Serializable {


     private Integer eventId;
     private Appuser appuser;
     private String name;
     private String location;
     private Date date;
     private int subeventId;
     private Date createdon;
     private Date modifiedon;
     private Set<Guestlist> guestlists = new HashSet<Guestlist>(0);

    public Event() {
    }

	
    public Event(String name, String location, Date date, int subeventId, Date createdon, Date modifiedon) {
        this.name = name;
        this.location = location;
        this.date = date;
        this.subeventId = subeventId;
        this.createdon = createdon;
        this.modifiedon = modifiedon;
    }
    public Event(Appuser appuser, String name, String location, Date date, int subeventId, Date createdon, Date modifiedon, Set<Guestlist> guestlists) {
       this.appuser = appuser;
       this.name = name;
       this.location = location;
       this.date = date;
       this.subeventId = subeventId;
       this.createdon = createdon;
       this.modifiedon = modifiedon;
       this.guestlists = guestlists;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="EventID", unique=true, nullable=false)
    public Integer getEventId() {
        return this.eventId;
    }
    
    public void setEventId(Integer eventId) {
        this.eventId = eventId;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="APPUSERID")
    public Appuser getAppuser() {
        return this.appuser;
    }
    
    public void setAppuser(Appuser appuser) {
        this.appuser = appuser;
    }
    
    @Column(name="Name", nullable=false)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="Location", nullable=false)
    public String getLocation() {
        return this.location;
    }
    
    public void setLocation(String location) {
        this.location = location;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Date", nullable=false, length=19)
    public Date getDate() {
        return this.date;
    }
    
    public void setDate(Date date) {
        this.date = date;
    }
    
    @Column(name="SubeventID", nullable=false)
    public int getSubeventId() {
        return this.subeventId;
    }
    
    public void setSubeventId(int subeventId) {
        this.subeventId = subeventId;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Createdon", nullable=false, length=19)
    public Date getCreatedon() {
        return this.createdon;
    }
    
    public void setCreatedon(Date createdon) {
        this.createdon = createdon;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Modifiedon", nullable=false, length=19)
    public Date getModifiedon() {
        return this.modifiedon;
    }
    
    public void setModifiedon(Date modifiedon) {
        this.modifiedon = modifiedon;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="event")
    public Set<Guestlist> getGuestlists() {
        return this.guestlists;
    }
    
    public void setGuestlists(Set<Guestlist> guestlists) {
        this.guestlists = guestlists;
    }




}


